##########ejercicio generar 3 secuencias que generen los siguientes datos###
#1)1000 datos que se generen de 3 en e y pedir el dato 300
#2) 450 datos que sea su secuencia de 50 en 50
#3) 2000 datos que sea de 3 en 3 y pedir los datos 3,15,800,1999
datos<-seq(1,3000,3)
datos[300]

datos1<-seq(1,22500,50)
datos1[10]

datos2<-seq(.1,600,.3)
datos2[c(3,15,800,1999)]

######### ejercicio datos aleatorios
#1) suponemos que una empresa quiere estimar una pensión para sus trabajadores 
# con base en la antiguedad, por lo que se requiere estimar una muestra de 500
# trabajadores y que sus rangos de antiguedad sean desde 0 hasta 30 años, pedir
# a R el último dato de esta muestra
#2) generar una muestra de 50,000 datos que tengan un rango desde 0 hasta 100,000
#3) generar una muestra de 50 datos que tengan un rango de 10 a 19 , pedir los datos
# 34,43 y 49

antiguedad<-sample(0:30,500,replace=T)
antiguedad[500]

muestra<-data.frame(sample(0:100000,50000))
View(muestra)
muestra1<-data.frame(sample(10:19,50,replace=T))
View(muestra1)
muestra1[c(34,43,49)]


############# matrices #################
e<-1:10
View(e)

dim(e)<-c(2,5) ## convertir un vector a una matriz de 2 renglones y 5 columnas
View(e)
class(e)
dim(e)<-c(5,2)
View(e)
e[2,1]  ##mandar llamar el dato del renglon 5 , columna 2
e[,2] ## valores columnas 2
e[2,] ##valores del renglón 2

########## como crear matrices ######
f<- matrix(110:119,nrow=5,ncol=2,byrow=T)
f
g<-matrix(1:10,nrow=5,ncol=2)
g

##también se pueden asignar nombres a renglones y columnas
rownames(f)<-c("manzana","naranja","piña","melon","mango")
colnames(f)<-c("mercado1","mercado2")

####### si tenemos una matriz grande y queremos preguntarle a r
# el nombre de las columnas 

rownames(f)
colnames(f)

### para saber los datos de una columna

f["manzana","mercado2"]
f["piña","mercado1"]
f["melon","mercado1"]
View(f)


### Otra forma de generar matrices en r
i<- rbind(1:2,4:3,c(5,6),c(2,7),c(8,9))
i

### cada argumento se define un renglon

j <- cbind (5:3,c(4,5,6),9:7,c(1,5,7),3:5)
j
